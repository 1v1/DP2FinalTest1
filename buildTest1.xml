<?xml version="1.0" encoding="UTF-8"?>

<project name="FDS-Test1" default="run-final-test" basedir=".">
	<description>
			Script for FDS Final Test 1
	</description>
	
	<!-- The lolcation of this assignment -->
	<property name="lab4.location" location="." />

	<!-- The random "FlightMonitorFactory" used for tests -->
	<property name="FDSInfo.FlightMonitorFactory" value="it.polito.dp2.FDS.Random.FlightMonitorFactoryImpl" />
	
	<!-- The location to be used for class files -->
	<property name="build.dir" location="${lab4.location}/build" />
	<!-- The location for source files -->
	<property name="src.dir" location="${lab4.location}/src" />
	<!-- The location for jar files -->
	<property name="lib.dir" location="${lab4.location}/lib" />

	<!-- The ant file to be provided for client and server compilation -->
	<property name="sol.build.file" value="sol_build.xml" />
	<property name="sol.build.filepath" location="${lab4.location}/${sol.build.file}" />
	
	<!-- The zip file with the solution to be submitted -->
	<property name="sol.zip" value="solution.zip" />
		
	<!-- The classpath to be used for running the tests -->
	<path id="test.classpath">
		<pathelement location="${build.dir}" />
		<pathelement location="${lib.dir}/FDSRandom.jar"/>
		<pathelement location="${lib.dir}/junit-4.5.jar"/>
			<pathelement location="${lib.dir}/lab4.jar"/>
			<pathelement location="${lib.dir}/lab4_1.jar"/>
		<pathelement location="${lib.dir}/FDS.jar" />
	</path>

	<target name="setseed" unless="seed">
		<tstamp>
			<format property="seed" pattern="1HHmmss" />
		</tstamp>
	</target>

	<target name="init">
		<mkdir dir="${build.dir}" />
	</target>

	<target name="build-client" depends="init">
		<ant antfile="${sol.build.filepath}" target="build-client">
			<property name="basedir" value="${lab4.location}" />
		</ant>
	</target>
	
	<target name="run-final-test" depends="setseed">
		  <echo>Running final test</echo>
	   	  <echo>Seed: ${seed}</echo>

	   	  <parallel>
	   	  	<daemons>
	   	  		<ant antfile="build.xml" target="run-server">
					<property name="basedir" value="${lab4.location}"/>
	   	  			<property name="seed" value="${seed}"/>
	   	  			<property name="testcase" value="2"/>
	   	  		</ant>
	   	    </daemons>
	   	  	<sequential>
	   	  		<sleep seconds="10"/>
	   			<antcall target="runFuncTest.real">
	   				<param name="test.class" value="it.polito.dp2.FDS.lab4.tests.FDSTest1" />
	   				<param name="exit.code" value="126" />
	   			</antcall>
	   	  	</sequential>
	   	  </parallel>
	</target>

	<!-- Target runFuncTest.real	-->
	<target name="runFuncTest.real" depends="build-client">
		<junit printsummary="yes" dir="." fork="yes" haltonfailure="no" showoutput="no" filtertrace="true" timeout="120000">
			<jvmarg value="-Djava.awt.headless=true" />
			<sysproperty key="it.polito.dp2.FDS.FlightMonitorFactory" value="${FDSInfo.FlightMonitorFactory}" />
			<sysproperty key="it.polito.dp2.FDS.Random.seed" value="${seed}"/>
			<!-- We force testcase 2 (passengers are present) -->
			<sysproperty key="it.polito.dp2.FDS.Random.testcase" value="2"/>
			<formatter type="brief" usefile="false"/>
			<test haltonfailure="no" failureproperty="test_failed" name="${test.class}"/>
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</junit>
		<fail if="test_failed" status="${exit.code}" message="*** Some Tests FAILED ***"/>
		<echo>*** All Tests PASSED  ***</echo>
	</target>

	<!-- target for cleaning -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<!--target for building the final zip containing the solution -->
	<target name="make-final-zip">
		<zip destfile="${sol.zip}" basedir="${lab4.location}" includes="${sol.build.file} wsdl/** custom/* src/it/polito/dp2/FDS/sol4/server/**/*.java src/it/polito/dp2/FDS/sol4/client/**/*.java answer.txt" />
	</target>
</project>
