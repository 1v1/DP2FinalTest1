
package it.polito.dp2.FDS.sol4.server.jaxws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Info", targetNamespace = "http://pad.polito.it/FDS")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Info {


    /**
     * 
     * 				This operation lets the user to get a single flight.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlight_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightResponse", fault = {
        @FaultAction(className = UnknownFlight_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlight/Fault/UnknownFlight"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlight/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlight/Fault/Monitor")
    })
    public GetFlightResponse getFlight(
        @WebParam(name = "getFlight", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlight parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlight_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get the whole list of
     * 				the flights in the
     * 				database.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightsResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightsResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightsRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightsResponse", fault = {
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlights/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlights/Fault/Monitor")
    })
    public GetFlightsResponse getFlights(
        @WebParam(name = "getFlights", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlights parameters)
        throws InvalidArgument_Exception, Monitor_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of flights
     * 				with the same departure airport.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightByDepartureAirportResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightByDepartureAirportResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightByDepartureAirportRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightByDepartureAirportResponse", fault = {
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightByDepartureAirport/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightByDepartureAirport/Fault/Monitor")
    })
    public GetFlightByDepartureAirportResponse getFlightByDepartureAirport(
        @WebParam(name = "getFlightByDepartureAirport", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlightByDepartureAirport parameters)
        throws InvalidArgument_Exception, Monitor_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of flights
     * 				with the same
     * 				destination airport.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightByDestinationAirportResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightByDestinationAirportResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightByDestinationAirportRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightByDestinationAirportResponse", fault = {
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightByDestinationAirport/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightByDestinationAirport/Fault/Monitor")
    })
    public GetFlightByDestinationAirportResponse getFlightByDestinationAirport(
        @WebParam(name = "getFlightByDestinationAirport", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlightByDestinationAirport parameters)
        throws InvalidArgument_Exception, Monitor_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a single flight
     * 				instance.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightInstanceResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlightInstance_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightInstanceResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceResponse", fault = {
        @FaultAction(className = UnknownFlightInstance_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstance/Fault/UnknownFlightInstance"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstance/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstance/Fault/Monitor")
    })
    public GetFlightInstanceResponse getFlightInstance(
        @WebParam(name = "getFlightInstance", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlightInstance parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlightInstance_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get the whole list of
     * 				flight instances
     * 				in the database.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightInstancesResponse
     * @throws Monitor_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightInstancesResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightInstancesRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightInstancesResponse", fault = {
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstances/Fault/Monitor")
    })
    public GetFlightInstancesResponse getFlightInstances(
        @WebParam(name = "getFlightInstances", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlightInstances parameters)
        throws Monitor_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of flight
     * 				instances with the same flight number.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightInstancesByFlightIDResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlightInstance_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightInstancesByFlightIDResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightInstancesByFlightIDRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightInstancesByFlightIDResponse", fault = {
        @FaultAction(className = UnknownFlightInstance_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstancesByFlightID/Fault/UnknownFlightInstance"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstancesByFlightID/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstancesByFlightID/Fault/Monitor")
    })
    public GetFlightInstancesByFlightIDResponse getFlightInstancesByFlightID(
        @WebParam(name = "getFlightInstancesByFlightID", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlightInstancesByFlightID parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlightInstance_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of flight
     * 				instances with the same flight instance status.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightInstanceByStatusResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlightInstance_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightInstanceByStatusResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByStatusRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByStatusResponse", fault = {
        @FaultAction(className = UnknownFlightInstance_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByStatus/Fault/UnknownFlightInstance"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByStatus/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByStatus/Fault/Monitor")
    })
    public GetFlightInstanceByStatusResponse getFlightInstanceByStatus(
        @WebParam(name = "getFlightInstanceByStatus", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlightInstanceByStatus parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlightInstance_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of flight
     * 				instances with the same departure date.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetFlightInstanceByDepartureDateResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlightInstance_Exception
     */
    @WebMethod
    @WebResult(name = "getFlightInstanceByDepartureDateResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByDepartureDateRequest", output = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByDepartureDateResponse", fault = {
        @FaultAction(className = UnknownFlightInstance_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByDepartureDate/Fault/UnknownFlightInstance"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByDepartureDate/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getFlightInstanceByDepartureDate/Fault/Monitor")
    })
    public GetFlightInstanceByDepartureDateResponse getFlightInstanceByDepartureDate(
        @WebParam(name = "getFlightInstanceByDepartureDate", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetFlightInstanceByDepartureDate parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlightInstance_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get the whole list of
     * 				passengers in the database.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetPassengersResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     */
    @WebMethod
    @WebResult(name = "getPassengersResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getPassengersRequest", output = "http://pad.polito.it/FDSInfo/Info/getPassengersResponse", fault = {
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengers/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengers/Fault/Monitor")
    })
    public GetPassengersResponse getPassengers(
        @WebParam(name = "getPassengers", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetPassengers parameters)
        throws InvalidArgument_Exception, Monitor_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of
     * 				passengers which are checked in on flight instances with the same
     * 				flight number.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetPassengerByFlightIDResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlightInstance_Exception
     */
    @WebMethod
    @WebResult(name = "getPassengerByFlightIDResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getPassengerByFlightIDRequest", output = "http://pad.polito.it/FDSInfo/Info/getPassengerByFlightIDResponse", fault = {
        @FaultAction(className = UnknownFlightInstance_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByFlightID/Fault/UnknownFlightInstance"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByFlightID/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByFlightID/Fault/Monitor")
    })
    public GetPassengerByFlightIDResponse getPassengerByFlightID(
        @WebParam(name = "getPassengerByFlightID", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetPassengerByFlightID parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlightInstance_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of
     * 				passengers instances with a name that starts with the specified
     * 				prefix.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetPassengerByPrefixResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlightInstance_Exception
     */
    @WebMethod
    @WebResult(name = "getPassengerByPrefixResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getPassengerByPrefixRequest", output = "http://pad.polito.it/FDSInfo/Info/getPassengerByPrefixResponse", fault = {
        @FaultAction(className = UnknownFlightInstance_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByPrefix/Fault/UnknownFlightInstance"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByPrefix/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByPrefix/Fault/Monitor")
    })
    public GetPassengerByPrefixResponse getPassengerByPrefix(
        @WebParam(name = "getPassengerByPrefix", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetPassengerByPrefix parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlightInstance_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get a list of
     * 				passengers which are checked in on flight instances that has the
     * 				same departure date.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetPassengerByDepartureDateResponse
     * @throws Monitor_Exception
     * @throws InvalidArgument_Exception
     * @throws UnknownFlightInstance_Exception
     */
    @WebMethod
    @WebResult(name = "getPassengerByDepartureDateResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getPassengerByDepartureDateRequest", output = "http://pad.polito.it/FDSInfo/Info/getPassengerByDepartureDateResponse", fault = {
        @FaultAction(className = UnknownFlightInstance_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByDepartureDate/Fault/UnknownFlightInstance"),
        @FaultAction(className = InvalidArgument_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByDepartureDate/Fault/InvalidArgument"),
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getPassengerByDepartureDate/Fault/Monitor")
    })
    public GetPassengerByDepartureDateResponse getPassengerByDepartureDate(
        @WebParam(name = "getPassengerByDepartureDate", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetPassengerByDepartureDate parameters)
        throws InvalidArgument_Exception, Monitor_Exception, UnknownFlightInstance_Exception
    ;

    /**
     * 
     * 				This operation lets the user to get the whole list of
     * 				the aircrafts in the database.
     * 			
     * 
     * @param parameters
     * @return
     *     returns it.polito.dp2.FDS.sol4.server.jaxws.GetAircraftsResponse
     * @throws Monitor_Exception
     */
    @WebMethod
    @WebResult(name = "getAircraftsResponse", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
    @Action(input = "http://pad.polito.it/FDSInfo/Info/getAircraftsRequest", output = "http://pad.polito.it/FDSInfo/Info/getAircraftsResponse", fault = {
        @FaultAction(className = Monitor_Exception.class, value = "http://pad.polito.it/FDSInfo/Info/getAircrafts/Fault/Monitor")
    })
    public GetAircraftsResponse getAircrafts(
        @WebParam(name = "getAircrafts", targetNamespace = "http://pad.polito.it/FDS", partName = "parameters")
        GetAircrafts parameters)
        throws Monitor_Exception
    ;

}
